@using WebFrontEnd.Models.Account
@model WebFrontEnd.Models.Board.ViewBoardModel

@{
    ViewBag.Title = "View";
}

<h2>View</h2>

<div>
    <h4>@Model.Board.Name</h4>
    <hr/>
    <div style="vertical-align: bottom; display: table-cell;">
        <img src="~/images/@Model.Board.ImageUrl"/>
        @if (Session["User"] != null)
        {
            if (Model.Liked)
            {
                <img src="~/images/liked.png" width="32" style="vertical-align: bottom" />
            }
            else
            {
                <a href="~/boards/like?boardid=@Model.Board.Id&userid=@((Session["User"] as UserAccount).UserId)">
                    <img src="~/images/not-liked.png" width="32" style="vertical-align: bottom" />
                </a>
            }
        }
    </div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Board.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Board.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Board.UploadedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Board.UploadedBy)
        </dd>
    </dl>
</div>
<div>
    <h4>Comments</h4>
    @foreach (var comment in Model.Comments)
    {
        <dl class="dl-horizontal">
            <dt>User</dt>
            <dd>@comment.User</dd>
            <dt>Comment</dt>
            <dd>@Html.Raw(comment.Text)</dd>
        </dl>
        <hr/>
    }
</div>
@if (Session["User"] != null)
{
    using (Html.BeginForm("AddComment", "Boards", FormMethod.Post))
    {
        <div class="form-horizontal">
            <h4>User</h4>
            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="form-group">
                @Html.LabelFor(x => x.NewComment.Text, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.TextAreaFor(x => x.NewComment.Text, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(x => x.NewComment.Text, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add comment" class="btn btn-default"/>
                </div>
            </div>
        </div>

        @Html.HiddenFor(x => x.NewComment.UserId)
        @Html.HiddenFor(x => x.Board.Id)
    }
}
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
